import{S as K,i as Q,s as W,C as H,w as X,x as Y,y as Z,z as ss,A as U,q as ns,o as as,B as ts,L as z,e as f,t as u,k as w,c as _,a as m,h as r,d as t,m as j,b,g as i,F as c,G as es}from"../../chunks/vendor-eca643b2.js";import{P as ps}from"../../chunks/page-d3da5a46.js";function os(h){let n,l,p,d,a,o,E,T,y,x,D,C,g,F='<code class="language-bash">pnpx svelte-add@latest postcss</code>',P,k,L,S,O,A,q,v,G=`<code class="language-js"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'postcss-import'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'postcss-strip-inline-comments'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'postcss-nested'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'postcss-preset-env'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'autoprefixer'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'postcss-extend-rule'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">'development'</span> <span class="token operator">&amp;&amp;</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'cssnano'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
      <span class="token literal-property property">preset</span><span class="token operator">:</span> <span class="token string">'default'</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> config<span class="token punctuation">;</span></code>`;return{c(){n=f("p"),l=u("Use "),p=f("a"),d=u("PostCSS"),a=u(" to process your css in components and "),o=f("code"),E=u(".postcss"),T=u(" files."),y=w(),x=f("p"),D=u("Install PostCSS with:"),C=w(),g=f("pre"),P=w(),k=f("p"),L=u("This is the recommended "),S=f("code"),O=u("postcss.config.cjs"),A=u(" setup:"),q=w(),v=f("pre"),this.h()},l(s){n=_(s,"P",{});var e=m(n);l=r(e,"Use "),p=_(e,"A",{href:!0,rel:!0});var I=m(p);d=r(I,"PostCSS"),I.forEach(t),a=r(e," to process your css in components and "),o=_(e,"CODE",{});var M=m(o);E=r(M,".postcss"),M.forEach(t),T=r(e," files."),e.forEach(t),y=j(s),x=_(s,"P",{});var N=m(x);D=r(N,"Install PostCSS with:"),N.forEach(t),C=j(s),g=_(s,"PRE",{class:!0});var V=m(g);V.forEach(t),P=j(s),k=_(s,"P",{});var $=m(k);L=r($,"This is the recommended "),S=_($,"CODE",{});var R=m(S);O=r(R,"postcss.config.cjs"),R.forEach(t),A=r($," setup:"),$.forEach(t),q=j(s),v=_(s,"PRE",{class:!0});var J=m(v);J.forEach(t),this.h()},h(){b(p,"href","https://postcss.org/"),b(p,"rel","nofollow"),b(g,"class","language-bash"),b(v,"class","language-js")},m(s,e){i(s,n,e),c(n,l),c(n,p),c(p,d),c(n,a),c(n,o),c(o,E),c(n,T),i(s,y,e),i(s,x,e),c(x,D),i(s,C,e),i(s,g,e),g.innerHTML=F,i(s,P,e),i(s,k,e),c(k,L),c(k,S),c(S,O),c(k,A),i(s,q,e),i(s,v,e),v.innerHTML=G},p:es,d(s){s&&t(n),s&&t(y),s&&t(x),s&&t(C),s&&t(g),s&&t(P),s&&t(k),s&&t(q),s&&t(v)}}}function cs(h){let n,l;const p=[h[0],B];let d={$$slots:{default:[os]},$$scope:{ctx:h}};for(let a=0;a<p.length;a+=1)d=H(d,p[a]);return n=new ps({props:d}),{c(){X(n.$$.fragment)},l(a){Y(n.$$.fragment,a)},m(a,o){Z(n,a,o),l=!0},p(a,[o]){const E=o&1?ss(p,[o&1&&U(a[0]),o&0&&U(B)]):{};o&2&&(E.$$scope={dirty:o,ctx:a}),n.$set(E)},i(a){l||(ns(n.$$.fragment,a),l=!0)},o(a){as(n.$$.fragment,a),l=!1},d(a){ts(n,a)}}}const B={title:"CSS Configuration"};function ls(h,n,l){return h.$$set=p=>{l(0,n=H(H({},n),z(p)))},n=z(n),[n]}class is extends K{constructor(n){super();Q(this,n,ls,cs,W,{})}}export{is as default,B as metadata};
